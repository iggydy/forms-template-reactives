{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/reactive/reactive.component.ts","webpack:///src/app/pages/reactive/reactive.component.html","webpack:///src/app/pages/template/template.component.ts","webpack:///src/app/pages/template/template.component.html","webpack:///src/app/services/pais.service.ts","webpack:///src/app/services/validaciones.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ReactiveComponent","fb","validator","crearFormulario","crearListeners","form","group","nombre","required","minLength","apellido","noHerrera","correo","pattern","usuario","existeUsuario","pass1","pass2","direccion","distrito","ciudad","pasatiempos","array","validators","samePasswords","get","valueChanges","subscribe","console","log","push","control","i","removeAt","invalid","markAllAsTouched","reset","touched","value","guardar","agregarPasatiempo","TemplateComponent","pais","paises","getPaises","unshift","codigo","Object","values","controls","forEach","markAsTouched","PaisService","http","pipe","resp","map","name","alpha3Code","providedIn","ValidacionesService","reject","setTimeout","existe","toLowerCase","pass1Name","pass2Name","formGroup","pass1Control","pass2Control","setErrors","noEsIgual","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveComponent } from './pages/reactive/reactive.component';\nimport { TemplateComponent } from './pages/template/template.component';\n\n\nconst routes: Routes = [\n\n  { path: 'reactivo', component: ReactiveComponent },\n  { path: 'template', component: TemplateComponent },\n  { path: '', component: ReactiveComponent },\n  { path: '**', component: ReactiveComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'forms';\n}\n","<div class=\"container\">\n\n    <router-outlet></router-outlet>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TemplateComponent } from './pages/template/template.component';\nimport { ReactiveComponent } from './pages/reactive/reactive.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TemplateComponent,\n    ReactiveComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { ValidacionesService } from '../../services/validaciones.service';\n\n@Component({\n  selector: 'app-reactive',\n  templateUrl: './reactive.component.html',\n  styleUrls: ['./reactive.component.scss']\n})\nexport class ReactiveComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor( private fb: FormBuilder,\n               private validator: ValidacionesService) {\n\n    this.crearFormulario();\n    this.crearListeners();\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  get pasatiempos() {\n    return this.form.get('pasatiempos') as FormArray;\n  }\n\n  get nombreNoValido() {\n    return this.form.get('nombre').invalid && this.form.get('nombre').touched;\n  }\n  get apellidoNoValido() {\n    return this.form.get('apellido').invalid && this.form.get('apellido').touched;\n  }\n  get correoInvalido() {\n    return this.form.get('correo').invalid && this.form.get('correo').touched;\n  }\n  get usuarioNoValido() {\n    return this.form.get('usuario').invalid && this.form.get('usuario').touched;\n  }\n  get distritoNoValido() {\n    return this.form.get('direccion.distrito').invalid && this.form.get('direccion.distrito').touched;\n  }\n  get ciudadNoValido() {\n    return this.form.get('direccion.ciudad').invalid && this.form.get('direccion.ciudad').touched;\n  }\n  get pass1NoValido() {\n    return this.form.get('pass1').invalid && this.form.get('pass1').touched;\n  }\n\n  get pass2NoValido() {\n    const pass1 = this.form.get('pass1').value;\n    const pass2 = this.form.get('pass2').value;\n\n    return (pass1 === pass2) ? false : true;\n  }\n\n  crearFormulario() {\n    this.form = this.fb.group({\n      nombre: ['',\n      [\n        Validators.required,\n        Validators.minLength(5)]\n      ],\n      apellido: ['',\n      [\n        Validators.required,\n        this.validator.noHerrera,\n        Validators.minLength(2)]\n      ],\n      correo: ['',\n      [\n        Validators.required,\n        Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')\n      ]\n      ],\n      usuario: ['', Validators.required, this.validator.existeUsuario\n      ],\n      pass1: ['',\n      [\n        Validators.required,\n      ]\n      ],\n      pass2: ['',\n      [\n        Validators.required,\n      ]\n      ],\n      direccion: this.fb.group({\n        distrito: ['', Validators.required],\n        ciudad: ['', Validators.required]\n      }),\n      pasatiempos: this.fb.array([])\n    }, {\n      validators: this.validator.samePasswords('pass1', 'pass2')\n    });\n  }\n\n  crearListeners() {\n    // this.form.valueChanges.subscribe(valor => {\n    //   console.log(valor);\n\n    // });\n\n    // this.form.statusChanges.subscribe(value => {\n    //   console.log({status});\n    // });\n\n    this.form.get('nombre').valueChanges.subscribe( console.log);\n  }\n\n  agregarPasatiempo() {\n    this.pasatiempos.push(this.fb.control(''));\n  }\n\n  borrarPasatiempo(i: number) {\n    this.pasatiempos.removeAt(i);\n  }\n\n  guardar() {\n    console.log(this.form);\n    if (this.form.invalid) {\n      return this.form.markAllAsTouched();\n\n    }\n\n    this.form.reset();\n\n  }\n\n}\n","<h4 class=\"mt-5\">Formularios <small> tipo </small></h4>\n<hr>\n<form autocomplete=\"off\" [formGroup]=\"form\" (ngSubmit)=\"guardar()\">\n\n    <div>\n\n        <div class=\"form-group row\">\n            <label class=\"col-2 col-form-label\">Nombre</label>\n            <div class=\"col\">\n\n                <input class=\"form-control\" type=\"text\" placeholder=\"Nombre\" formControlName=\"nombre\" [class.is-invalid]=\"nombreNoValido\">\n                <small *ngIf=\"nombreNoValido\" class=\"form-text text-danger\">Mínimo 5 caractares</small>\n\n            </div>\n\n        </div>\n\n        <div class=\"form-group row\">\n            <label class=\"col-2 col-form-label\">Apellido</label>\n            <div class=\"col\">\n\n                <input class=\"form-control\" type=\"text\" placeholder=\"Apellido\" formControlName=\"apellido\" [class.is-invalid]=\"apellidoNoValido\">\n                <small *ngIf=\"apellidoNoValido\" class=\"form-text text-danger\">Mínimo 2 caracteres</small>\n\n            </div>\n        </div>\n\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-2 col-form-label\">Contraseña</label>\n        <div class=\"col\">\n\n            <input class=\"form-control\" type=\"password\" placeholder=\"Contraseña\" formControlName=\"pass1\" [class.is-invalid]=\"pass1NoValido\">\n            <small *ngIf=\"pass1NoValido\" class=\"form-text text-danger\">Campo Obligatorio</small>\n\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-2 col-form-label\">Repetir Contraseña</label>\n        <div class=\"col\">\n\n            <input class=\"form-control\" type=\"password\" placeholder=\"Repetir Contraseña\" formControlName=\"pass2\" [class.is-invalid]=\"pass2NoValido\">\n            <small *ngIf=\"pass2NoValido\" class=\"form-text text-danger\">La contraseña debe de ser la misma</small>\n\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-2 col-form-label\">Correo</label>\n        <div class=\"col\">\n\n            <input class=\"form-control\" type=\"email\" placeholder=\"Correo electrónico\" formControlName=\"correo\" [class.is-invalid]=\"correoInvalido\">\n\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-2 col-form-label\">Usuario</label>\n        <div class=\"col\">\n\n            <input class=\"form-control\" type=\"email\" placeholder=\"Nombre de usuario\" formControlName=\"usuario\" [class.is-invalid]=\"usuarioNoValido\">\n            <small *ngIf=\"usuarioNoValido\" class=\"form-text text-danger\">Ese nombre ya fue usado</small>\n\n        </div>\n    </div>\n\n    <div class=\"form-group row\" formGroupName=\"direccion\">\n        <label class=\"col-2 col-form-label\">Dirección</label>\n        <div class=\"form-row col\">\n            <div class=\"col\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Distrito\" formControlName=\"distrito\" [class.is-invalid]=\"distritoNoValido\">\n                <small *ngIf=\"distritoNoValido\" class=\"form-text text-danger\">Campo Obligatorio</small>\n            </div>\n\n            <div class=\"col\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Ciudad\" formControlName=\"ciudad\" [class.is-invalid]=\"ciudadNoValido\">\n                <small *ngIf=\"ciudadNoValido\" class=\"form-text text-danger\">Campo Obligatorio</small>\n\n            </div>\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <div class=\"col\">\n            <table class=\"table\">\n                <thead class=\"thead-dark\">\n                    <tr>\n                        <th>ID</th>\n                        <th>Pasatiempo</th>\n                        <th>Borroar</th>\n                    </tr>\n                </thead>\n                <tbody formArrayName=\"pasatiempos\">\n                    <tr *ngFor=\"let control of pasatiempos.controls; let i = index\">\n                        <td> {{ i + 1 }} </td>\n                        <td>\n                            <input class=\"form-control\" type=\"text\" [formControlName]=\"i\">\n                        </td>\n                        <td>\n                            <button class=\"btn btn-danger\" type=\"button\" (click)=\"borrarPasatiempo(i)\">Borrar</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <button class=\"btn btn-primary mt-3 mb-5 btn-block\" type=\"button\" (click)=\"agregarPasatiempo()\">+ Agregar</button>\n        </div>\n    </div>\n\n\n\n    <div class=\"form-group row\">\n        <label class=\"col-2 col-form-label\">&nbsp;</label>\n        <div class=\"input-group col-md\">\n            <button type=\"submit\" class=\"btn btn-outline-primary btn-block\">\n        Guardar\n      </button>\n        </div>\n    </div>\n\n</form>\n\n<hr>\n\n<pre>\n    Estado del Formulario:  {{form.valid}}\n    <br>\n    Status: {{form.status}}\n</pre>\n\n<pre>\n    {{form.value | json}}\n</pre>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { PaisService } from '../../services/pais.service';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.scss']\n})\nexport class TemplateComponent implements OnInit {\n\n  usuario = {\n    nombre: '',\n    apellido: '',\n    correo: '',\n    pais: ''\n  };\n\n  paises: any[] = [];\n\n  constructor( private pais: PaisService) { }\n\n  ngOnInit(): void {\n\n    this.pais.getPaises()\n    .subscribe( (paises: any) => {\n      this.paises = paises;\n\n      this.paises.unshift({\n        nombre: 'Selecciones País',\n        codigo: ''\n      });\n    });\n  }\n\n  guardar( form: NgForm) {\n    console.log(form.value);\n\n    if (form.invalid) {\n\n      Object.values(form.controls).forEach(control => {\n        control.markAsTouched();\n      });\n\n      return;\n    }\n  }\n\n}\n","<h4 class=\"mt-5\">Formularios <small> tipo </small></h4>\n<hr>\n<form autocomplete=\"off\" (ngSubmit)=\"guardar(forma)\" #forma=\"ngForm\">\n\n    <div>\n\n        <div class=\"form-group row\">\n            <label class=\"col-2 col-form-label\">Nombre</label>\n            <div class=\"col-8\">\n\n                <input class=\"form-control\" [class.is-invalid]=\"nombre.invalid && nombre.touched\" name=\"nombre\" type=\"text\" placeholder=\"Nombre\" [ngModel]=\"usuario.nombre\" #nombre=\"ngModel\" required minlength=\"5\">\n                <small *ngIf=\"nombre.invalid && nombre.touched\" class=\"form-text text-danger\">Ingresar 5 letras</small>\n            </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label class=\"col-2 col-form-label\">Apellido</label>\n            <div class=\"col-8\">\n\n                <input class=\"form-control\" type=\"text\" placeholder=\"Apellido\" [ngModel]=\"usuario.apellido\" [class.is-invalid]=\"apellido.invalid && apellido.touched\" name=\"apellido\" #apellido=\"ngModel\" required minlength=\"2\">\n                <small *ngIf=\"apellido.invalid && apellido.touched\" class=\"form-text text-danger\">Ingresar 2 letras</small>\n            </div>\n        </div>\n\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-2 col-form-label\">Correo</label>\n        <div class=\"col-8\">\n\n            <input class=\"form-control\" type=\"email\" placeholder=\"Correo electrónico\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" [class.is-invalid]=\"correo.invalid && correo.touched\" [ngModel]=\"usuario.correo\" name=\"correo\" #correo=\"ngModel\" required>\n            <small *ngIf=\"correo.invalid && correo.touched\" class=\"form-text text-danger\">Correo electrónico no valido</small>\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-2 col-form-label\">País</label>\n        <div class=\"col-8\">\n\n            <select class=\"form-control\" name=\"pais\" [ngModel]=\"usuario.pais\" required [disabled]=\"paises.length === 0\" [class.is-invalid]=\"pais.invalid && pais.touched\" #pais=\"ngModel\">\n                <option *ngFor=\"let pais of paises\" [value]=\"pais.codigo\">\n                    {{pais.nombre}}\n                </option>\n            </select>\n            <small *ngIf=\"pais.invalid && pais.touched\" class=\"form-text text-danger\">Selecciones un paías</small>\n\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-2 col-form-label\">Genero</label>\n        <div class=\"col-8\">\n\n            <div class=\"form-check form-check-inline\">\n\n                <input type=\"radio\" class=\"form-check-input\" ngModel name=\"genero\" value=\"M\" required #genero=\"ngModel\" [class.is-invalid]=\"genero.invalid && genero.touched\">\n                <label class=\"form-check-label\">Masculino</label>\n\n            </div>\n\n            <div class=\"form-check form-check-inline\">\n\n                <input type=\"radio\" class=\"form-check-input\" ngModel name=\"genero\" value=\"F\" required #genero=\"ngModel\" [class.is-invalid]=\"genero.invalid && genero.touched\">\n                <label class=\"form-check-label\">Femenino</label>\n\n            </div>\n        </div>\n    </div>\n\n\n\n    <div class=\"form-group row\">\n        <label class=\"col-2 col-form-label\">&nbsp;</label>\n        <div class=\"input-group col-md-8\">\n            <button type=\"submit\" class=\"btn btn-outline-primary btn-block\">\n        Guardar\n      </button>\n        </div>\n    </div>\n\n</form>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaisService {\n\n  constructor( private http: HttpClient) { }\n\n  getPaises() {\n    return this.http.get('https://restcountries.eu/rest/v2/lang/es')\n      .pipe( map( (resp: any[]) => {\n        return resp.map( pais => {\n          return {\n            nombre: pais.name,\n            codigo: pais.alpha3Code\n          };\n        } );\n      }) );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\ninterface ErrorValidate {\n  [s: string]: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidacionesService {\n\n  constructor() { }\n\n  existeUsuario(control: FormControl): Promise<any> | Observable<any> {\n\n    return new Promise((resolve, reject) => {\n\n      setTimeout(() => {\n        if (control.value === 'strider') {\n          resolve({ existe: true});\n        } else {\n          resolve(null);\n        }\n      }, 3500);\n    });\n  }\n\n  noHerrera(control: FormControl): ErrorValidate {\n\n    if (control.value?.toLowerCase() === 'herrera') {\n      return {\n        noHerrera: true\n      };\n\n    }\n\n    return null;\n\n  }\n\n  samePasswords( pass1Name: string, pass2Name: string) {\n\n    return ( formGroup: FormGroup) => {\n      const pass1Control = formGroup.controls[pass1Name];\n      const pass2Control = formGroup.controls[pass2Name];\n\n      if (pass1Control.value === pass2Control.value) {\n        pass2Control.setErrors(null);\n      } else {\n        pass2Control.setErrors( {noEsIgual: true});\n      }\n    };\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}